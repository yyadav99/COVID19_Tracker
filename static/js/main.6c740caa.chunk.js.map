{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Card/Card.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","Date","toLocaleDateString","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","CardComponent","cardTitle","cardSubtitle","Grid","item","xs","md","component","Card","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","toDateString","Info","spacing","justify","infected","App","state","setState","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c740caa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2p9wt\",\"infected\":\"Cards_infected__29qdR\",\"recovered\":\"Cards_recovered__2-atf\",\"deaths\":\"Cards_deaths__1NL9H\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },  {\n            data: dailyData.map((data) => data.recovered),\n            label: 'Recovered',\n            borderColor: 'green',\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">United States</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Card.module.css';\n\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {cardTitle}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\n      </Typography>\n      <Typography color=\"textSecondary\">\n        {new Date(lastUpdate).toDateString()}\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        {cardSubtitle}\n      </Typography>\n    </CardContent>\n  </Grid>\n);\n\nexport default CardComponent;\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport CardComponent from './Card/Card';\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n        <Typography gutterBottom variant=\"h4\" component=\"h2\">Global</Typography>\n      <Grid container spacing={3} justify=\"center\">\n        <CardComponent\n          className={styles.infected}\n          cardTitle=\"Infected\"\n          value={confirmed.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of active cases from COVID-19.\"\n        />\n        <CardComponent\n          className={styles.recovered}\n          cardTitle=\"Recovered\"\n          value={recovered.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\n        />\n        <CardComponent\n          className={styles.deaths}\n          cardTitle=\"Deaths\"\n          value={deaths.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Info;\n","import React from 'react';\n\nimport { Cards, CountryPicker, Chart } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} /> \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3fdiv\",\"image\":\"App_image__3UyR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3QPFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2b1ic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2dW2o\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}